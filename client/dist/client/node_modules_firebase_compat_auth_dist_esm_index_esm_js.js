"use strict";
(self["webpackChunkclient"] = self["webpackChunkclient"] || []).push([["node_modules_firebase_compat_auth_dist_esm_index_esm_js"],{

/***/ 428:
/*!******************************************************************!*\
  !*** ./node_modules/@firebase/auth-compat/dist/index.esm2017.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _firebase_app_compat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/app-compat */ 5003);
/* harmony import */ var _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/auth/internal */ 937);
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/component */ 4692);
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @firebase/util */ 7748);





var name = "@firebase/auth-compat";
var version = "0.4.2";

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;
function _getCurrentScheme() {
  var _a;
  return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;
}
/**
 * @return {boolean} Whether the current environment is http or https.
 */
function _isHttpOrHttps() {
  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';
}
/**
 * @param {?string=} ua The user agent.
 * @return {boolean} Whether the app is rendered in a mobile iOS or Android
 *     Cordova environment.
 */
function _isAndroidOrIosCordovaScheme(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.getUA)()) {
  return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:' || _getCurrentScheme() === 'capacitor:') && ua.toLowerCase().match(/iphone|ipad|ipod|android/));
}
/**
 * @return {boolean} Whether the environment is a native environment, where
 *     CORS checks do not apply.
 */
function _isNativeEnvironment() {
  return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isReactNative)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isNode)();
}
/**
 * Checks whether the user agent is IE11.
 * @return {boolean} True if it is IE11.
 */
function _isIe11() {
  return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isIE)() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;
}
/**
 * Checks whether the user agent is Edge.
 * @param {string} userAgent The browser user agent string.
 * @return {boolean} True if it is Edge.
 */
function _isEdge(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.getUA)()) {
  return /Edge\/\d+/.test(ua);
}
/**
 * @param {?string=} opt_userAgent The navigator user agent.
 * @return {boolean} Whether local storage is not synchronized between an iframe
 *     and a popup of the same domain.
 */
function _isLocalStorageNotSynchronized(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.getUA)()) {
  return _isIe11() || _isEdge(ua);
}
/** @return {boolean} Whether web storage is supported. */
function _isWebStorageSupported() {
  try {
    const storage = self.localStorage;
    const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._generateEventId();
    if (storage) {
      // setItem will throw an exception if we cannot access WebStorage (e.g.,
      // Safari in private mode).
      storage['setItem'](key, '1');
      storage['removeItem'](key);
      // For browsers where iframe web storage does not synchronize with a popup
      // of the same domain, indexedDB is used for persistent storage. These
      // browsers include IE11 and Edge.
      // Make sure it is supported (IE11 and Edge private mode does not support
      // that).
      if (_isLocalStorageNotSynchronized()) {
        // In such browsers, if indexedDB is not supported, an iframe cannot be
        // notified of the popup sign in result.
        return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isIndexedDBAvailable)();
      }
      return true;
    }
  } catch (e) {
    // localStorage is not available from a worker. Test availability of
    // indexedDB.
    return _isWorker() && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isIndexedDBAvailable)();
  }
  return false;
}
/**
 * @param {?Object=} global The optional global scope.
 * @return {boolean} Whether current environment is a worker.
 */
function _isWorker() {
  // WorkerGlobalScope only defined in worker environment.
  return typeof global !== 'undefined' && 'WorkerGlobalScope' in global && 'importScripts' in global;
}
function _isPopupRedirectSupported() {
  return (_isHttpOrHttps() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isBrowserExtension)() || _isAndroidOrIosCordovaScheme()) &&
  // React Native with remote debugging reports its location.protocol as
  // http.
  !_isNativeEnvironment() &&
  // Local storage has to be supported for browser popup and redirect
  // operations to work.
  _isWebStorageSupported() &&
  // DOM, popups and redirects are not supported within a worker.
  !_isWorker();
}
/** Quick check that indicates the platform *may* be Cordova */
function _isLikelyCordova() {
  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';
}
function _isCordova() {
  return _isCordova2.apply(this, arguments);
}
function _isCordova2() {
  _isCordova2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
    if (!_isLikelyCordova()) {
      return false;
    }
    return new Promise(resolve => {
      const timeoutId = setTimeout(() => {
        // We've waited long enough; the telltale Cordova event didn't happen
        resolve(false);
      }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);
      document.addEventListener('deviceready', () => {
        clearTimeout(timeoutId);
        resolve(true);
      });
    });
  });
  return _isCordova2.apply(this, arguments);
}
function _getSelfWindow() {
  return typeof window !== 'undefined' ? window : null;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Persistence = {
  LOCAL: 'local',
  NONE: 'none',
  SESSION: 'session'
};
const _assert$3 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._assert;
const PERSISTENCE_KEY = 'persistence';
/**
 * Validates that an argument is a valid persistence value. If an invalid type
 * is specified, an error is thrown synchronously.
 */
function _validatePersistenceArgument(auth, persistence) {
  _assert$3(Object.values(Persistence).includes(persistence), auth, "invalid-persistence-type" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);
  // Validate if the specified type is supported in the current environment.
  if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isReactNative)()) {
    // This is only supported in a browser.
    _assert$3(persistence !== Persistence.SESSION, auth, "unsupported-persistence-type" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);
    return;
  }
  if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isNode)()) {
    // Only none is supported in Node.js.
    _assert$3(persistence === Persistence.NONE, auth, "unsupported-persistence-type" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);
    return;
  }
  if (_isWorker()) {
    // In a worker environment, either LOCAL or NONE are supported.
    // If indexedDB not supported and LOCAL provided, throw an error
    _assert$3(persistence === Persistence.NONE || persistence === Persistence.LOCAL && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_4__.isIndexedDBAvailable)(), auth, "unsupported-persistence-type" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);
    return;
  }
  // This is restricted by what the browser supports.
  _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, "unsupported-persistence-type" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);
}
function _savePersistenceForRedirect(_x) {
  return _savePersistenceForRedirect2.apply(this, arguments);
}
function _savePersistenceForRedirect2() {
  _savePersistenceForRedirect2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth) {
    yield auth._initializationPromise;
    const session = getSessionStorageIfAvailable();
    const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);
    if (session) {
      session.setItem(key, auth._getPersistence());
    }
  });
  return _savePersistenceForRedirect2.apply(this, arguments);
}
function _getPersistencesFromRedirect(apiKey, appName) {
  const session = getSessionStorageIfAvailable();
  if (!session) {
    return [];
  }
  const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);
  const persistence = session.getItem(key);
  switch (persistence) {
    case Persistence.NONE:
      return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.inMemoryPersistence];
    case Persistence.LOCAL:
      return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.indexedDBLocalPersistence, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserSessionPersistence];
    case Persistence.SESSION:
      return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserSessionPersistence];
    default:
      return [];
  }
}
/** Returns session storage, or null if the property access errors */
function getSessionStorageIfAvailable() {
  var _a;
  try {
    return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;
  } catch (e) {
    return null;
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const _assert$2 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._assert;
/** Platform-agnostic popup-redirect resolver */
class CompatPopupRedirectResolver {
  constructor() {
    // Create both resolvers for dynamic resolution later
    this.browserResolver = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserPopupRedirectResolver);
    this.cordovaResolver = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.cordovaPopupRedirectResolver);
    // The actual resolver in use: either browserResolver or cordovaResolver.
    this.underlyingResolver = null;
    this._redirectPersistence = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserSessionPersistence;
    this._completeRedirectFn = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._getRedirectResult;
    this._overrideRedirectResult = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._overrideRedirectResult;
  }
  _initialize(auth) {
    var _this = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this.selectUnderlyingResolver();
      return _this.assertedUnderlyingResolver._initialize(auth);
    })();
  }
  _openPopup(auth, provider, authType, eventId) {
    var _this2 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this2.selectUnderlyingResolver();
      return _this2.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);
    })();
  }
  _openRedirect(auth, provider, authType, eventId) {
    var _this3 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this3.selectUnderlyingResolver();
      return _this3.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);
    })();
  }
  _isIframeWebStorageSupported(auth, cb) {
    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);
  }
  _originValidation(auth) {
    return this.assertedUnderlyingResolver._originValidation(auth);
  }
  get _shouldInitProactively() {
    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;
  }
  get assertedUnderlyingResolver() {
    _assert$2(this.underlyingResolver, "internal-error" /* exp.AuthErrorCode.INTERNAL_ERROR */);
    return this.underlyingResolver;
  }
  selectUnderlyingResolver() {
    var _this4 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      if (_this4.underlyingResolver) {
        return;
      }
      // We haven't yet determined whether or not we're in Cordova; go ahead
      // and determine that state now.
      const isCordova = yield _isCordova();
      _this4.underlyingResolver = isCordova ? _this4.cordovaResolver : _this4.browserResolver;
    })();
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function unwrap(object) {
  return object.unwrap();
}
function wrapped(object) {
  return object.wrapped();
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function credentialFromResponse(userCredential) {
  return credentialFromObject(userCredential);
}
function attachExtraErrorFields(auth, e) {
  var _a;
  // The response contains all fields from the server which may or may not
  // actually match the underlying type
  const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;
  if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {
    const mfaErr = e;
    mfaErr.resolver = new MultiFactorResolver(auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.getMultiFactorResolver(auth, e));
  } else if (response) {
    const credential = credentialFromObject(e);
    const credErr = e;
    if (credential) {
      credErr.credential = credential;
      credErr.tenantId = response.tenantId || undefined;
      credErr.email = response.email || undefined;
      credErr.phoneNumber = response.phoneNumber || undefined;
    }
  }
}
function credentialFromObject(object) {
  const {
    _tokenResponse
  } = object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_4__.FirebaseError ? object.customData : object;
  if (!_tokenResponse) {
    return null;
  }
  // Handle phone Auth credential responses, as they have a different format
  // from other backend responses (i.e. no providerId). This is also only the
  // case for user credentials (does not work for errors).
  if (!(object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_4__.FirebaseError)) {
    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {
      return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneAuthProvider.credentialFromResult(object);
    }
  }
  const providerId = _tokenResponse.providerId;
  // Email and password is not supported as there is no situation where the
  // server would return the password to the client.
  if (!providerId || providerId === _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ProviderId.PASSWORD) {
    return null;
  }
  let provider;
  switch (providerId) {
    case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ProviderId.GOOGLE:
      provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.GoogleAuthProvider;
      break;
    case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ProviderId.FACEBOOK:
      provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.FacebookAuthProvider;
      break;
    case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ProviderId.GITHUB:
      provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.GithubAuthProvider;
      break;
    case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ProviderId.TWITTER:
      provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.TwitterAuthProvider;
      break;
    default:
      const {
        oauthIdToken,
        oauthAccessToken,
        oauthTokenSecret,
        pendingToken,
        nonce
      } = _tokenResponse;
      if (!oauthAccessToken && !oauthTokenSecret && !oauthIdToken && !pendingToken) {
        return null;
      }
      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC
      if (pendingToken) {
        if (providerId.startsWith('saml.')) {
          return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.SAMLAuthCredential._create(providerId, pendingToken);
        } else {
          // OIDC and non-default providers excluding Twitter.
          return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.OAuthCredential._fromParams({
            providerId,
            signInMethod: providerId,
            pendingToken,
            idToken: oauthIdToken,
            accessToken: oauthAccessToken
          });
        }
      }
      return new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.OAuthProvider(providerId).credential({
        idToken: oauthIdToken,
        accessToken: oauthAccessToken,
        rawNonce: nonce
      });
  }
  return object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_4__.FirebaseError ? provider.credentialFromError(object) : provider.credentialFromResult(object);
}
function convertCredential(auth, credentialPromise) {
  return credentialPromise.catch(e => {
    if (e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_4__.FirebaseError) {
      attachExtraErrorFields(auth, e);
    }
    throw e;
  }).then(credential => {
    const operationType = credential.operationType;
    const user = credential.user;
    return {
      operationType,
      credential: credentialFromResponse(credential),
      additionalUserInfo: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.getAdditionalUserInfo(credential),
      user: User.getOrCreate(user)
    };
  });
}
function convertConfirmationResult(_x2, _x3) {
  return _convertConfirmationResult.apply(this, arguments);
}
function _convertConfirmationResult() {
  _convertConfirmationResult = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth, confirmationResultPromise) {
    const confirmationResultExp = yield confirmationResultPromise;
    return {
      verificationId: confirmationResultExp.verificationId,
      confirm: verificationCode => convertCredential(auth, confirmationResultExp.confirm(verificationCode))
    };
  });
  return _convertConfirmationResult.apply(this, arguments);
}
class MultiFactorResolver {
  constructor(auth, resolver) {
    this.resolver = resolver;
    this.auth = wrapped(auth);
  }
  get session() {
    return this.resolver.session;
  }
  get hints() {
    return this.resolver.hints;
  }
  resolveSignIn(assertion) {
    return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class User {
  constructor(_delegate) {
    this._delegate = _delegate;
    this.multiFactor = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.multiFactor(_delegate);
  }
  static getOrCreate(user) {
    if (!User.USER_MAP.has(user)) {
      User.USER_MAP.set(user, new User(user));
    }
    return User.USER_MAP.get(user);
  }
  delete() {
    return this._delegate.delete();
  }
  reload() {
    return this._delegate.reload();
  }
  toJSON() {
    return this._delegate.toJSON();
  }
  getIdTokenResult(forceRefresh) {
    return this._delegate.getIdTokenResult(forceRefresh);
  }
  getIdToken(forceRefresh) {
    return this._delegate.getIdToken(forceRefresh);
  }
  linkAndRetrieveDataWithCredential(credential) {
    return this.linkWithCredential(credential);
  }
  linkWithCredential(credential) {
    var _this5 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return convertCredential(_this5.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.linkWithCredential(_this5._delegate, credential));
    })();
  }
  linkWithPhoneNumber(phoneNumber, applicationVerifier) {
    var _this6 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return convertConfirmationResult(_this6.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.linkWithPhoneNumber(_this6._delegate, phoneNumber, applicationVerifier));
    })();
  }
  linkWithPopup(provider) {
    var _this7 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return convertCredential(_this7.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.linkWithPopup(_this7._delegate, provider, CompatPopupRedirectResolver));
    })();
  }
  linkWithRedirect(provider) {
    var _this8 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _savePersistenceForRedirect(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._castAuth(_this8.auth));
      return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.linkWithRedirect(_this8._delegate, provider, CompatPopupRedirectResolver);
    })();
  }
  reauthenticateAndRetrieveDataWithCredential(credential) {
    return this.reauthenticateWithCredential(credential);
  }
  reauthenticateWithCredential(credential) {
    var _this9 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return convertCredential(_this9.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.reauthenticateWithCredential(_this9._delegate, credential));
    })();
  }
  reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
    return convertConfirmationResult(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));
  }
  reauthenticateWithPopup(provider) {
    return convertCredential(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));
  }
  reauthenticateWithRedirect(provider) {
    var _this10 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _savePersistenceForRedirect(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._castAuth(_this10.auth));
      return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.reauthenticateWithRedirect(_this10._delegate, provider, CompatPopupRedirectResolver);
    })();
  }
  sendEmailVerification(actionCodeSettings) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.sendEmailVerification(this._delegate, actionCodeSettings);
  }
  unlink(providerId) {
    var _this11 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.unlink(_this11._delegate, providerId);
      return _this11;
    })();
  }
  updateEmail(newEmail) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.updateEmail(this._delegate, newEmail);
  }
  updatePassword(newPassword) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.updatePassword(this._delegate, newPassword);
  }
  updatePhoneNumber(phoneCredential) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.updatePhoneNumber(this._delegate, phoneCredential);
  }
  updateProfile(profile) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.updateProfile(this._delegate, profile);
  }
  verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);
  }
  get emailVerified() {
    return this._delegate.emailVerified;
  }
  get isAnonymous() {
    return this._delegate.isAnonymous;
  }
  get metadata() {
    return this._delegate.metadata;
  }
  get phoneNumber() {
    return this._delegate.phoneNumber;
  }
  get providerData() {
    return this._delegate.providerData;
  }
  get refreshToken() {
    return this._delegate.refreshToken;
  }
  get tenantId() {
    return this._delegate.tenantId;
  }
  get displayName() {
    return this._delegate.displayName;
  }
  get email() {
    return this._delegate.email;
  }
  get photoURL() {
    return this._delegate.photoURL;
  }
  get providerId() {
    return this._delegate.providerId;
  }
  get uid() {
    return this._delegate.uid;
  }
  get auth() {
    return this._delegate.auth;
  }
}
// Maintain a map so that there's always a 1:1 mapping between new User and
// legacy compat users
User.USER_MAP = new WeakMap();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const _assert$1 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._assert;
class Auth {
  constructor(app, provider) {
    this.app = app;
    if (provider.isInitialized()) {
      this._delegate = provider.getImmediate();
      this.linkUnderlyingAuth();
      return;
    }
    const {
      apiKey
    } = app.options;
    // TODO: platform needs to be determined using heuristics
    _assert$1(apiKey, "invalid-api-key" /* exp.AuthErrorCode.INVALID_API_KEY */, {
      appName: app.name
    });
    // TODO: platform needs to be determined using heuristics
    _assert$1(apiKey, "invalid-api-key" /* exp.AuthErrorCode.INVALID_API_KEY */, {
      appName: app.name
    });
    // Only use a popup/redirect resolver in browser environments
    const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;
    this._delegate = provider.initialize({
      options: {
        persistence: buildPersistenceHierarchy(apiKey, app.name),
        popupRedirectResolver: resolver
      }
    });
    this._delegate._updateErrorMap(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.debugErrorMap);
    this.linkUnderlyingAuth();
  }
  get emulatorConfig() {
    return this._delegate.emulatorConfig;
  }
  get currentUser() {
    if (!this._delegate.currentUser) {
      return null;
    }
    return User.getOrCreate(this._delegate.currentUser);
  }
  get languageCode() {
    return this._delegate.languageCode;
  }
  set languageCode(languageCode) {
    this._delegate.languageCode = languageCode;
  }
  get settings() {
    return this._delegate.settings;
  }
  get tenantId() {
    return this._delegate.tenantId;
  }
  set tenantId(tid) {
    this._delegate.tenantId = tid;
  }
  useDeviceLanguage() {
    this._delegate.useDeviceLanguage();
  }
  signOut() {
    return this._delegate.signOut();
  }
  useEmulator(url, options) {
    _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.connectAuthEmulator(this._delegate, url, options);
  }
  applyActionCode(code) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.applyActionCode(this._delegate, code);
  }
  checkActionCode(code) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.checkActionCode(this._delegate, code);
  }
  confirmPasswordReset(code, newPassword) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.confirmPasswordReset(this._delegate, code, newPassword);
  }
  createUserWithEmailAndPassword(email, password) {
    var _this12 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return convertCredential(_this12._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.createUserWithEmailAndPassword(_this12._delegate, email, password));
    })();
  }
  fetchProvidersForEmail(email) {
    return this.fetchSignInMethodsForEmail(email);
  }
  fetchSignInMethodsForEmail(email) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.fetchSignInMethodsForEmail(this._delegate, email);
  }
  isSignInWithEmailLink(emailLink) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.isSignInWithEmailLink(this._delegate, emailLink);
  }
  getRedirectResult() {
    var _this13 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _assert$1(_isPopupRedirectSupported(), _this13._delegate, "operation-not-supported-in-this-environment" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);
      const credential = yield _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.getRedirectResult(_this13._delegate, CompatPopupRedirectResolver);
      if (!credential) {
        return {
          credential: null,
          user: null
        };
      }
      return convertCredential(_this13._delegate, Promise.resolve(credential));
    })();
  }
  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.
  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it
  // out of autogenerated documentation pages to reduce accidental misuse.
  addFrameworkForLogging(framework) {
    _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.addFrameworkForLogging(this._delegate, framework);
  }
  onAuthStateChanged(nextOrObserver, errorFn, completed) {
    const {
      next,
      error,
      complete
    } = wrapObservers(nextOrObserver, errorFn, completed);
    return this._delegate.onAuthStateChanged(next, error, complete);
  }
  onIdTokenChanged(nextOrObserver, errorFn, completed) {
    const {
      next,
      error,
      complete
    } = wrapObservers(nextOrObserver, errorFn, completed);
    return this._delegate.onIdTokenChanged(next, error, complete);
  }
  sendSignInLinkToEmail(email, actionCodeSettings) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);
  }
  sendPasswordResetEmail(email, actionCodeSettings) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);
  }
  setPersistence(persistence) {
    var _this14 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _validatePersistenceArgument(_this14._delegate, persistence);
      let converted;
      switch (persistence) {
        case Persistence.SESSION:
          converted = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserSessionPersistence;
          break;
        case Persistence.LOCAL:
          // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.
          const isIndexedDBFullySupported = yield _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.indexedDBLocalPersistence)._isAvailable();
          converted = isIndexedDBFullySupported ? _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.indexedDBLocalPersistence : _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserLocalPersistence;
          break;
        case Persistence.NONE:
          converted = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.inMemoryPersistence;
          break;
        default:
          return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._fail("argument-error" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {
            appName: _this14._delegate.name
          });
      }
      return _this14._delegate.setPersistence(converted);
    })();
  }
  signInAndRetrieveDataWithCredential(credential) {
    return this.signInWithCredential(credential);
  }
  signInAnonymously() {
    return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInAnonymously(this._delegate));
  }
  signInWithCredential(credential) {
    return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithCredential(this._delegate, credential));
  }
  signInWithCustomToken(token) {
    return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithCustomToken(this._delegate, token));
  }
  signInWithEmailAndPassword(email, password) {
    return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithEmailAndPassword(this._delegate, email, password));
  }
  signInWithEmailLink(email, emailLink) {
    return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithEmailLink(this._delegate, email, emailLink));
  }
  signInWithPhoneNumber(phoneNumber, applicationVerifier) {
    return convertConfirmationResult(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));
  }
  signInWithPopup(provider) {
    var _this15 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _assert$1(_isPopupRedirectSupported(), _this15._delegate, "operation-not-supported-in-this-environment" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);
      return convertCredential(_this15._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithPopup(_this15._delegate, provider, CompatPopupRedirectResolver));
    })();
  }
  signInWithRedirect(provider) {
    var _this16 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _assert$1(_isPopupRedirectSupported(), _this16._delegate, "operation-not-supported-in-this-environment" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);
      yield _savePersistenceForRedirect(_this16._delegate);
      return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.signInWithRedirect(_this16._delegate, provider, CompatPopupRedirectResolver);
    })();
  }
  updateCurrentUser(user) {
    // remove ts-ignore once overloads are defined for exp functions to accept compat objects
    // @ts-ignore
    return this._delegate.updateCurrentUser(user);
  }
  verifyPasswordResetCode(code) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.verifyPasswordResetCode(this._delegate, code);
  }
  unwrap() {
    return this._delegate;
  }
  _delete() {
    return this._delegate._delete();
  }
  linkUnderlyingAuth() {
    this._delegate.wrapped = () => this;
  }
}
Auth.Persistence = Persistence;
function wrapObservers(nextOrObserver, error, complete) {
  let next = nextOrObserver;
  if (typeof nextOrObserver !== 'function') {
    ({
      next,
      error,
      complete
    } = nextOrObserver);
  }
  // We know 'next' is now a function
  const oldNext = next;
  const newNext = user => oldNext(user && User.getOrCreate(user));
  return {
    next: newNext,
    error: error,
    complete
  };
}
function buildPersistenceHierarchy(apiKey, appName) {
  // Note this is slightly different behavior: in this case, the stored
  // persistence is checked *first* rather than last. This is because we want
  // to prefer stored persistence type in the hierarchy. This is an empty
  // array if window is not available or there is no pending redirect
  const persistences = _getPersistencesFromRedirect(apiKey, appName);
  // If "self" is available, add indexedDB
  if (typeof self !== 'undefined' && !persistences.includes(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.indexedDBLocalPersistence)) {
    persistences.push(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.indexedDBLocalPersistence);
  }
  // If "window" is available, add HTML Storage persistences
  if (typeof window !== 'undefined') {
    for (const persistence of [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserLocalPersistence, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.browserSessionPersistence]) {
      if (!persistences.includes(persistence)) {
        persistences.push(persistence);
      }
    }
  }
  // Add in-memory as a final fallback
  if (!persistences.includes(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.inMemoryPersistence)) {
    persistences.push(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.inMemoryPersistence);
  }
  return persistences;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class PhoneAuthProvider {
  constructor() {
    this.providerId = 'phone';
    // TODO: remove ts-ignore when moving types from auth-types to auth-compat
    // @ts-ignore
    this._delegate = new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneAuthProvider(unwrap(_firebase_app_compat__WEBPACK_IMPORTED_MODULE_1__["default"].auth()));
  }
  static credential(verificationId, verificationCode) {
    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneAuthProvider.credential(verificationId, verificationCode);
  }
  verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {
    return this._delegate.verifyPhoneNumber(
    // The implementation matches but the types are subtly incompatible
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    phoneInfoOptions, applicationVerifier);
  }
  unwrap() {
    return this._delegate;
  }
}
PhoneAuthProvider.PHONE_SIGN_IN_METHOD = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;
PhoneAuthProvider.PROVIDER_ID = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneAuthProvider.PROVIDER_ID;

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const _assert = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__._assert;
class RecaptchaVerifier {
  constructor(container, parameters, app = _firebase_app_compat__WEBPACK_IMPORTED_MODULE_1__["default"].app()) {
    var _a;
    // API key is required for web client RPC calls.
    _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, "invalid-api-key" /* exp.AuthErrorCode.INVALID_API_KEY */, {
      appName: app.name
    });
    this._delegate = new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.RecaptchaVerifier(container,
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    parameters,
    // TODO: remove ts-ignore when moving types from auth-types to auth-compat
    // @ts-ignore
    app.auth());
    this.type = this._delegate.type;
  }
  clear() {
    this._delegate.clear();
  }
  render() {
    return this._delegate.render();
  }
  verify() {
    return this._delegate.verify();
  }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const AUTH_TYPE = 'auth-compat';
// Create auth components to register with firebase.
// Provides Auth public APIs.
function registerAuthCompat(instance) {
  instance.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_3__.Component(AUTH_TYPE, container => {
    // getImmediate for FirebaseApp will always succeed
    const app = container.getProvider('app-compat').getImmediate();
    const authProvider = container.getProvider('auth');
    return new Auth(app, authProvider);
  }, "PUBLIC" /* ComponentType.PUBLIC */).setServiceProps({
    ActionCodeInfo: {
      Operation: {
        EMAIL_SIGNIN: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.EMAIL_SIGNIN,
        PASSWORD_RESET: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.PASSWORD_RESET,
        RECOVER_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.RECOVER_EMAIL,
        REVERT_SECOND_FACTOR_ADDITION: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,
        VERIFY_AND_CHANGE_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,
        VERIFY_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.ActionCodeOperation.VERIFY_EMAIL
      }
    },
    EmailAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.EmailAuthProvider,
    FacebookAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.FacebookAuthProvider,
    GithubAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.GithubAuthProvider,
    GoogleAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.GoogleAuthProvider,
    OAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.OAuthProvider,
    SAMLAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.SAMLAuthProvider,
    PhoneAuthProvider: PhoneAuthProvider,
    PhoneMultiFactorGenerator: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.PhoneMultiFactorGenerator,
    RecaptchaVerifier: RecaptchaVerifier,
    TwitterAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.TwitterAuthProvider,
    Auth,
    AuthCredential: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_2__.AuthCredential,
    Error: _firebase_util__WEBPACK_IMPORTED_MODULE_4__.FirebaseError
  }).setInstantiationMode("LAZY" /* InstantiationMode.LAZY */).setMultipleInstances(false));
  instance.registerVersion(name, version);
}
registerAuthCompat(_firebase_app_compat__WEBPACK_IMPORTED_MODULE_1__["default"]);

/***/ }),

/***/ 937:
/*!**************************************************************!*\
  !*** ./node_modules/@firebase/auth/dist/esm2017/internal.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ActionCodeOperation": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.A),
/* harmony export */   "ActionCodeURL": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ag),
/* harmony export */   "AuthCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.J),
/* harmony export */   "AuthErrorCodes": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.G),
/* harmony export */   "AuthImpl": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aJ),
/* harmony export */   "AuthPopup": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aM),
/* harmony export */   "EmailAuthCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.K),
/* harmony export */   "EmailAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.Q),
/* harmony export */   "FacebookAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.U),
/* harmony export */   "FactorId": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.F),
/* harmony export */   "FetchProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aN),
/* harmony export */   "GithubAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.W),
/* harmony export */   "GoogleAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.V),
/* harmony export */   "OAuthCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.L),
/* harmony export */   "OAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.X),
/* harmony export */   "OperationType": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.O),
/* harmony export */   "PhoneAuthCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.M),
/* harmony export */   "PhoneAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.P),
/* harmony export */   "PhoneMultiFactorGenerator": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.m),
/* harmony export */   "ProviderId": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.p),
/* harmony export */   "RecaptchaVerifier": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.R),
/* harmony export */   "SAMLAuthCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aO),
/* harmony export */   "SAMLAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.Y),
/* harmony export */   "SignInMethod": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.S),
/* harmony export */   "TotpMultiFactorGenerator": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.T),
/* harmony export */   "TotpSecret": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.n),
/* harmony export */   "TwitterAuthProvider": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.Z),
/* harmony export */   "UserImpl": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aI),
/* harmony export */   "_assert": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA),
/* harmony export */   "_castAuth": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aH),
/* harmony export */   "_fail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.av),
/* harmony export */   "_generateEventId": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aL),
/* harmony export */   "_getClientVersion": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aK),
/* harmony export */   "_getInstance": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aC),
/* harmony export */   "_getRedirectResult": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aE),
/* harmony export */   "_overrideRedirectResult": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aF),
/* harmony export */   "_persistenceKeyName": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aD),
/* harmony export */   "addFrameworkForLogging": () => (/* binding */ addFrameworkForLogging),
/* harmony export */   "applyActionCode": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a5),
/* harmony export */   "beforeAuthStateChanged": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.w),
/* harmony export */   "browserLocalPersistence": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.b),
/* harmony export */   "browserPopupRedirectResolver": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.k),
/* harmony export */   "browserSessionPersistence": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a),
/* harmony export */   "checkActionCode": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a6),
/* harmony export */   "confirmPasswordReset": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a4),
/* harmony export */   "connectAuthEmulator": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.I),
/* harmony export */   "cordovaPopupRedirectResolver": () => (/* binding */ cordovaPopupRedirectResolver),
/* harmony export */   "createUserWithEmailAndPassword": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a8),
/* harmony export */   "debugErrorMap": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.D),
/* harmony export */   "deleteUser": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.C),
/* harmony export */   "fetchSignInMethodsForEmail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ad),
/* harmony export */   "getAdditionalUserInfo": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ao),
/* harmony export */   "getAuth": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.o),
/* harmony export */   "getIdToken": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.al),
/* harmony export */   "getIdTokenResult": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.am),
/* harmony export */   "getMultiFactorResolver": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aq),
/* harmony export */   "getRedirectResult": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.j),
/* harmony export */   "inMemoryPersistence": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.N),
/* harmony export */   "indexedDBLocalPersistence": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.i),
/* harmony export */   "initializeAuth": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.H),
/* harmony export */   "initializeRecaptchaConfig": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.t),
/* harmony export */   "isSignInWithEmailLink": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ab),
/* harmony export */   "linkWithCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a0),
/* harmony export */   "linkWithPhoneNumber": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.l),
/* harmony export */   "linkWithPopup": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.d),
/* harmony export */   "linkWithRedirect": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.g),
/* harmony export */   "multiFactor": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ar),
/* harmony export */   "onAuthStateChanged": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.x),
/* harmony export */   "onIdTokenChanged": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.v),
/* harmony export */   "parseActionCodeURL": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ah),
/* harmony export */   "prodErrorMap": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.E),
/* harmony export */   "reauthenticateWithCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a1),
/* harmony export */   "reauthenticateWithPhoneNumber": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.r),
/* harmony export */   "reauthenticateWithPopup": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.e),
/* harmony export */   "reauthenticateWithRedirect": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.h),
/* harmony export */   "reload": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ap),
/* harmony export */   "sendEmailVerification": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ae),
/* harmony export */   "sendPasswordResetEmail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a3),
/* harmony export */   "sendSignInLinkToEmail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aa),
/* harmony export */   "setPersistence": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.q),
/* harmony export */   "signInAnonymously": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__._),
/* harmony export */   "signInWithCredential": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.$),
/* harmony export */   "signInWithCustomToken": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a2),
/* harmony export */   "signInWithEmailAndPassword": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a9),
/* harmony export */   "signInWithEmailLink": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ac),
/* harmony export */   "signInWithPhoneNumber": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.s),
/* harmony export */   "signInWithPopup": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.c),
/* harmony export */   "signInWithRedirect": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.f),
/* harmony export */   "signOut": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.B),
/* harmony export */   "unlink": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.an),
/* harmony export */   "updateCurrentUser": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.z),
/* harmony export */   "updateEmail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aj),
/* harmony export */   "updatePassword": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ak),
/* harmony export */   "updatePhoneNumber": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.u),
/* harmony export */   "updateProfile": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ai),
/* harmony export */   "useDeviceLanguage": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.y),
/* harmony export */   "verifyBeforeUpdateEmail": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.af),
/* harmony export */   "verifyPasswordResetCode": () => (/* reexport safe */ _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a7)
/* harmony export */ });
/* harmony import */ var _media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-e3d5d3f4.js */ 5247);
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/util */ 7748);
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/app */ 8770);
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @firebase/logger */ 8118);
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @firebase/component */ 4692);









/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function _cordovaWindow() {
  return window;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * How long to wait after the app comes back into focus before concluding that
 * the user closed the sign in tab.
 */
const REDIRECT_TIMEOUT_MS = 2000;
/**
 * Generates the URL for the OAuth handler.
 */
function _generateHandlerUrl(_x, _x2, _x3) {
  return _generateHandlerUrl2.apply(this, arguments);
}
/**
 * Validates that this app is valid for this project configuration
 */
function _generateHandlerUrl2() {
  _generateHandlerUrl2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth, event, provider) {
    var _a;
    // Get the cordova plugins
    const {
      BuildInfo
    } = _cordovaWindow();
    (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.as)(event.sessionId, 'AuthEvent did not contain a session ID');
    const sessionDigest = yield computeSha256(event.sessionId);
    const additionalParams = {};
    if ((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.at)()) {
      // iOS app identifier
      additionalParams['ibi'] = BuildInfo.packageName;
    } else if ((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.au)()) {
      // Android app identifier
      additionalParams['apn'] = BuildInfo.packageName;
    } else {
      (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.av)(auth, "operation-not-supported-in-this-environment" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);
    }
    // Add the display name if available
    if (BuildInfo.displayName) {
      additionalParams['appDisplayName'] = BuildInfo.displayName;
    }
    // Attached the hashed session ID
    additionalParams['sessionId'] = sessionDigest;
    return (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aw)(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);
  });
  return _generateHandlerUrl2.apply(this, arguments);
}
function _validateOrigin(_x4) {
  return _validateOrigin2.apply(this, arguments);
}
function _validateOrigin2() {
  _validateOrigin2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth) {
    const {
      BuildInfo
    } = _cordovaWindow();
    const request = {};
    if ((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.at)()) {
      request.iosBundleId = BuildInfo.packageName;
    } else if ((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.au)()) {
      request.androidPackageName = BuildInfo.packageName;
    } else {
      (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.av)(auth, "operation-not-supported-in-this-environment" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);
    }
    // Will fail automatically if package name is not authorized
    yield (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ax)(auth, request);
  });
  return _validateOrigin2.apply(this, arguments);
}
function _performRedirect(handlerUrl) {
  // Get the cordova plugins
  const {
    cordova
  } = _cordovaWindow();
  return new Promise(resolve => {
    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {
      let iabRef = null;
      if (browserTabIsAvailable) {
        cordova.plugins.browsertab.openUrl(handlerUrl);
      } else {
        // TODO: Return the inappbrowser ref that's returned from the open call
        iabRef = cordova.InAppBrowser.open(handlerUrl, (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.ay)() ? '_blank' : '_system', 'location=yes');
      }
      resolve(iabRef);
    });
  });
}
/**
 * This function waits for app activity to be seen before resolving. It does
 * this by attaching listeners to various dom events. Once the app is determined
 * to be visible, this promise resolves. AFTER that resolution, the listeners
 * are detached and any browser tabs left open will be closed.
 */
function _waitForAppResume(_x5, _x6, _x7) {
  return _waitForAppResume2.apply(this, arguments);
}
/**
 * Checks the configuration of the Cordova environment. This has no side effect
 * if the configuration is correct; otherwise it throws an error with the
 * missing plugin.
 */
function _waitForAppResume2() {
  _waitForAppResume2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth, eventListener, iabRef) {
    // Get the cordova plugins
    const {
      cordova
    } = _cordovaWindow();
    let cleanup = () => {};
    try {
      yield new Promise((resolve, reject) => {
        let onCloseTimer = null;
        // DEFINE ALL THE CALLBACKS =====
        function authEventSeen() {
          var _a;
          // Auth event was detected. Resolve this promise and close the extra
          // window if it's still open.
          resolve();
          const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;
          if (typeof closeBrowserTab === 'function') {
            closeBrowserTab();
          }
          // Close inappbrowser emebedded webview in iOS7 and 8 case if still
          // open.
          if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {
            iabRef.close();
          }
        }
        function resumed() {
          if (onCloseTimer) {
            // This code already ran; do not rerun.
            return;
          }
          onCloseTimer = window.setTimeout(() => {
            // Wait two seeconds after resume then reject.
            reject((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.az)(auth, "redirect-cancelled-by-user" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));
          }, REDIRECT_TIMEOUT_MS);
        }
        function visibilityChanged() {
          if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {
            resumed();
          }
        }
        // ATTACH ALL THE LISTENERS =====
        // Listen for the auth event
        eventListener.addPassiveListener(authEventSeen);
        // Listen for resume and visibility events
        document.addEventListener('resume', resumed, false);
        if ((0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.au)()) {
          document.addEventListener('visibilitychange', visibilityChanged, false);
        }
        // SETUP THE CLEANUP FUNCTION =====
        cleanup = () => {
          eventListener.removePassiveListener(authEventSeen);
          document.removeEventListener('resume', resumed, false);
          document.removeEventListener('visibilitychange', visibilityChanged, false);
          if (onCloseTimer) {
            window.clearTimeout(onCloseTimer);
          }
        };
      });
    } finally {
      cleanup();
    }
  });
  return _waitForAppResume2.apply(this, arguments);
}
function _checkCordovaConfiguration(auth) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
  const win = _cordovaWindow();
  // Check all dependencies installed.
  // https://github.com/nordnet/cordova-universal-links-plugin
  // Note that cordova-universal-links-plugin has been abandoned.
  // A fork with latest fixes is available at:
  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA)(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, "invalid-cordova-configuration" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {
    missingPlugin: 'cordova-universal-links-plugin-fix'
  });
  // https://www.npmjs.com/package/cordova-plugin-buildinfo
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA)(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, "invalid-cordova-configuration" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {
    missingPlugin: 'cordova-plugin-buildInfo'
  });
  // https://github.com/google/cordova-plugin-browsertab
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA)(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, "invalid-cordova-configuration" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {
    missingPlugin: 'cordova-plugin-browsertab'
  });
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA)(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, "invalid-cordova-configuration" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {
    missingPlugin: 'cordova-plugin-browsertab'
  });
  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aA)(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, "invalid-cordova-configuration" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {
    missingPlugin: 'cordova-plugin-inappbrowser'
  });
}
/**
 * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only
 * available in "secure" contexts, which covers Cordova (which is served on a file
 * protocol).
 */
function computeSha256(_x8) {
  return _computeSha.apply(this, arguments);
}
function _computeSha() {
  _computeSha = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (sessionId) {
    const bytes = stringToArrayBuffer(sessionId);
    // TODO: For IE11 crypto has a different name and this operation comes back
    //       as an object, not a promise. This is the old proposed standard that
    //       is used by IE11:
    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface
    const buf = yield crypto.subtle.digest('SHA-256', bytes);
    const arr = Array.from(new Uint8Array(buf));
    return arr.map(num => num.toString(16).padStart(2, '0')).join('');
  });
  return _computeSha.apply(this, arguments);
}
function stringToArrayBuffer(str) {
  // This function is only meant to deal with an ASCII charset and makes
  // certain simplifying assumptions.
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.as)(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');
  if (typeof TextEncoder !== 'undefined') {
    return new TextEncoder().encode(str);
  }
  const buff = new ArrayBuffer(str.length);
  const view = new Uint8Array(buff);
  for (let i = 0; i < str.length; i++) {
    view[i] = str.charCodeAt(i);
  }
  return view;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const SESSION_ID_LENGTH = 20;
/** Custom AuthEventManager that adds passive listeners to events */
class CordovaAuthEventManager extends _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aB {
  constructor() {
    super(...arguments);
    this.passiveListeners = new Set();
    this.initPromise = new Promise(resolve => {
      this.resolveInialized = resolve;
    });
  }
  addPassiveListener(cb) {
    this.passiveListeners.add(cb);
  }
  removePassiveListener(cb) {
    this.passiveListeners.delete(cb);
  }
  // In a Cordova environment, this manager can live through multiple redirect
  // operations
  resetRedirect() {
    this.queuedRedirectEvent = null;
    this.hasHandledPotentialRedirect = false;
  }
  /** Override the onEvent method */
  onEvent(event) {
    this.resolveInialized();
    this.passiveListeners.forEach(cb => cb(event));
    return super.onEvent(event);
  }
  initialized() {
    var _this = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      yield _this.initPromise;
    })();
  }
}
/**
 * Generates a (partial) {@link AuthEvent}.
 */
function _generateNewEvent(auth, type, eventId = null) {
  return {
    type,
    eventId,
    urlResponse: null,
    sessionId: generateSessionId(),
    postBody: null,
    tenantId: auth.tenantId,
    error: (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.az)(auth, "no-auth-event" /* AuthErrorCode.NO_AUTH_EVENT */)
  };
}

function _savePartialEvent(auth, event) {
  return storage()._set(persistenceKey(auth), event);
}
function _getAndRemoveEvent(_x9) {
  return _getAndRemoveEvent2.apply(this, arguments);
}
function _getAndRemoveEvent2() {
  _getAndRemoveEvent2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (auth) {
    const event = yield storage()._get(persistenceKey(auth));
    if (event) {
      yield storage()._remove(persistenceKey(auth));
    }
    return event;
  });
  return _getAndRemoveEvent2.apply(this, arguments);
}
function _eventFromPartialAndUrl(partialEvent, url) {
  var _a, _b;
  // Parse the deep link within the dynamic link URL.
  const callbackUrl = _getDeepLinkFromCallback(url);
  // Confirm it is actually a callback URL.
  // Currently the universal link will be of this format:
  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>
  // This is a fake URL but is not intended to take the user anywhere
  // and just redirect to the app.
  if (callbackUrl.includes('/__/auth/callback')) {
    // Check if there is an error in the URL.
    // This mechanism is also used to pass errors back to the app:
    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>
    const params = searchParamsOrEmpty(callbackUrl);
    // Get the error object corresponding to the stringified error if found.
    const errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;
    const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];
    const error = code ? (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.az)(code) : null;
    if (error) {
      return {
        type: partialEvent.type,
        eventId: partialEvent.eventId,
        tenantId: partialEvent.tenantId,
        error,
        urlResponse: null,
        sessionId: null,
        postBody: null
      };
    } else {
      return {
        type: partialEvent.type,
        eventId: partialEvent.eventId,
        tenantId: partialEvent.tenantId,
        sessionId: partialEvent.sessionId,
        urlResponse: callbackUrl,
        postBody: null
      };
    }
  }
  return null;
}
function generateSessionId() {
  const chars = [];
  const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  for (let i = 0; i < SESSION_ID_LENGTH; i++) {
    const idx = Math.floor(Math.random() * allowedChars.length);
    chars.push(allowedChars.charAt(idx));
  }
  return chars.join('');
}
function storage() {
  return (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aC)(_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.b);
}
function persistenceKey(auth) {
  return (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aD)("authEvent" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);
}
function parseJsonOrNull(json) {
  try {
    return JSON.parse(json);
  } catch (e) {
    return null;
  }
}
// Exported for testing
function _getDeepLinkFromCallback(url) {
  const params = searchParamsOrEmpty(url);
  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;
  // Double link case (automatic redirect)
  const doubleDeepLink = searchParamsOrEmpty(link)['link'];
  // iOS custom scheme links.
  const iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;
  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];
  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;
}
/**
 * Optimistically tries to get search params from a string, or else returns an
 * empty search params object.
 */
function searchParamsOrEmpty(url) {
  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {
    return {};
  }
  const [_, ...rest] = url.split('?');
  return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.querystringDecode)(rest.join('?'));
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * How long to wait for the initial auth event before concluding no
 * redirect pending
 */
const INITIAL_EVENT_TIMEOUT_MS = 500;
class CordovaPopupRedirectResolver {
  constructor() {
    this._redirectPersistence = _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.a;
    this._shouldInitProactively = true; // This is lightweight for Cordova
    this.eventManagers = new Map();
    this.originValidationPromises = {};
    this._completeRedirectFn = _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aE;
    this._overrideRedirectResult = _index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aF;
  }
  _initialize(auth) {
    var _this2 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const key = auth._key();
      let manager = _this2.eventManagers.get(key);
      if (!manager) {
        manager = new CordovaAuthEventManager(auth);
        _this2.eventManagers.set(key, manager);
        _this2.attachCallbackListeners(auth, manager);
      }
      return manager;
    })();
  }
  _openPopup(auth) {
    (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.av)(auth, "operation-not-supported-in-this-environment" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);
  }

  _openRedirect(auth, provider, authType, eventId) {
    var _this3 = this;
    return (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _checkCordovaConfiguration(auth);
      const manager = yield _this3._initialize(auth);
      yield manager.initialized();
      // Reset the persisted redirect states. This does not matter on Web where
      // the redirect always blows away application state entirely. On Cordova,
      // the app maintains control flow through the redirect.
      manager.resetRedirect();
      (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aG)();
      yield _this3._originValidation(auth);
      const event = _generateNewEvent(auth, authType, eventId);
      yield _savePartialEvent(auth, event);
      const url = yield _generateHandlerUrl(auth, event, provider);
      const iabRef = yield _performRedirect(url);
      return _waitForAppResume(auth, manager, iabRef);
    })();
  }
  _isIframeWebStorageSupported(_auth, _cb) {
    throw new Error('Method not implemented.');
  }
  _originValidation(auth) {
    const key = auth._key();
    if (!this.originValidationPromises[key]) {
      this.originValidationPromises[key] = _validateOrigin(auth);
    }
    return this.originValidationPromises[key];
  }
  attachCallbackListeners(auth, manager) {
    // Get the global plugins
    const {
      universalLinks,
      handleOpenURL,
      BuildInfo
    } = _cordovaWindow();
    const noEventTimeout = setTimeout( /*#__PURE__*/(0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      // We didn't see that initial event. Clear any pending object and
      // dispatch no event
      yield _getAndRemoveEvent(auth);
      manager.onEvent(generateNoEvent());
    }), INITIAL_EVENT_TIMEOUT_MS);
    const universalLinksCb = /*#__PURE__*/function () {
      var _ref2 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (eventData) {
        // We have an event so we can clear the no event timeout
        clearTimeout(noEventTimeout);
        const partialEvent = yield _getAndRemoveEvent(auth);
        let finalEvent = null;
        if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {
          finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);
        }
        // If finalEvent is never filled, trigger with no event
        manager.onEvent(finalEvent || generateNoEvent());
      });
      return function universalLinksCb(_x10) {
        return _ref2.apply(this, arguments);
      };
    }();
    // Universal links subscriber doesn't exist for iOS, so we need to check
    if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {
      universalLinks.subscribe(null, universalLinksCb);
    }
    // iOS 7 or 8 custom URL schemes.
    // This is also the current default behavior for iOS 9+.
    // For this to work, cordova-plugin-customurlscheme needs to be installed.
    // https://github.com/EddyVerbruggen/Custom-URL-scheme
    // Do not overwrite the existing developer's URL handler.
    const existingHandleOpenURL = handleOpenURL;
    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;
    _cordovaWindow().handleOpenURL = /*#__PURE__*/function () {
      var _ref3 = (0,_media_aslu_New_Volume_project_main_Project_U_learn_Project_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (url) {
        if (url.toLowerCase().startsWith(packagePrefix)) {
          // We want this intentionally to float
          // eslint-disable-next-line @typescript-eslint/no-floating-promises
          universalLinksCb({
            url
          });
        }
        // Call the developer's handler if it is present.
        if (typeof existingHandleOpenURL === 'function') {
          try {
            existingHandleOpenURL(url);
          } catch (e) {
            // This is a developer error. Don't stop the flow of the SDK.
            console.error(e);
          }
        }
      });
      return function (_x11) {
        return _ref3.apply(this, arguments);
      };
    }();
  }
}
/**
 * An implementation of {@link PopupRedirectResolver} suitable for Cordova
 * based applications.
 *
 * @public
 */
const cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;
function generateNoEvent() {
  return {
    type: "unknown" /* AuthEventType.UNKNOWN */,
    eventId: null,
    sessionId: null,
    urlResponse: null,
    postBody: null,
    tenantId: null,
    error: (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.az)("no-auth-event" /* AuthErrorCode.NO_AUTH_EVENT */)
  };
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.
// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out
// of autogenerated documentation pages to reduce accidental misuse.
function addFrameworkForLogging(auth, framework) {
  (0,_index_e3d5d3f4_js__WEBPACK_IMPORTED_MODULE_1__.aH)(auth)._logFramework(framework);
}


/***/ }),

/***/ 9906:
/*!*****************************************************************!*\
  !*** ./node_modules/firebase/compat/auth/dist/esm/index.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_auth_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth-compat */ 428);


/***/ })

}]);
//# sourceMappingURL=node_modules_firebase_compat_auth_dist_esm_index_esm_js.js.map